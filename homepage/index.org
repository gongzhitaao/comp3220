#+TITLE: PPL -- Spring 2016
#+SETUPFILE: ../general-setup.org
#+OPTIONS: toc:2 num:2 H:3 ^:nil pri:t
#+STARTUP: showall hideblocks
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://gongzhitaao.github.io/orgcss/org.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/font-awesome.min.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/ppl.css"/>

* Course Information
  :PROPERTIES:
  :CUSTOM_ID: sec:course-information
  :END:

** Course Description
   :PROPERTIES:
   :CUSTOM_ID: sec:course-description
   :END:

   This course covers

   1. Three tutorials on programming languages, each in a different
      programming paradigm.
   2. Basic programming language concepts, e.g., data type, variable,
      functions, user-defined types and etc.
   3. Compiler basics, e.g., context-free grammar, automata.


   - Course Number: COMP 3220
   - Course Title: Principle of Programming Languages
   - Total Credit: 3
   - Prerequisites: COMP 2210
   - Class Meeting: 3 hours per week
   - Course Website: http://auburn.edu/~zzg0009/comp3220/spring2016/

** Instructor Information
   :PROPERTIES:
   :CUSTOM_ID: sec:instructor-information
   :END:

   - Instructor: Zhitao Gong
     + Office: Shelby 2307
     + Office Hours: Friday 1000 -- 1100
     + Email: zzg0009 at TigerMail

   - Teaching Assistant: Wenlu Wang
     + Office: Shelby 2307
     + Office Hours: Wednsday 1500 -- 1600
     + Email: wzw0022 at TigerMail

** Course Materials
   :PROPERTIES:
   :CUSTOM_ID: sec:course-materials
   :END:

*** Required Textbook

    /Concepts of Programming Languages/, tenth edition by Robert
    W. Sebesta.

*** Recommended Texts

    You may find a complete list of the auxiliary materials in the
    Section [[#sec:syllabus]]

    - /Essentials of Programming Languages/, Third edition by Daniel
      P. Friedman and Mitchell Wand.
    - /Modern Programming Languages: A Practical Introduction/, Second
      Edition by Dr. Adam Brooks Webber[fn:1].
    - /Formal Language: A Practical Introduction/ by Adam Brooks Webber[fn:2].

* Grading Policy
  :PROPERTIES:
  :CUSTOM_ID: sec:grading-policy
  :END:

** Graded Course Activities
   :PROPERTIES:
   :CUSTOM_ID: sec:graded-course-activities
   :END:

   All assignments details are posted on [[https://auburn.instructure.com/][Canvas]].

   #+CAPTION: Grade weight distribution
   #+NAME: tab:grade-weight
   | Description  | Points |
   |--------------+--------|
   | Assignment   |     40 |
   | Midterm Exam |     20 |
   | Final Exam   |     20 |
   | Term Project |     20 |
   |--------------+--------|
   | Total        |    100 |
   #+TBLFM: @6$2=vsum(@I..@II)

** Submission Policy
   :PROPERTIES:
   :CUSTOM_ID: sec:submission-policy
   :END:

   Please review this following submission policy CAREFULLY.

   - NO LATE SUBMISSION :: Be sure to subscribe to Canvas
        notifications and pay close attention to deadlines.  There
        will be *NO* make up assignments or quizzes, or late work
        accepted without a serious and compelling reason (e.g., alien
        invasion, zombie outbreak, petrified by Voldemort) and my
        almighty approval.
   - MAKE SURE IT IS VALID :: It is your responsibility to make sure
        the files you submitted is valid.

     1. If you /intentionally/ submit an empty placeholder, it is
        your fault.  No makeup for it.

     2. If you /unintentionally/ submit an empty file, it is also your
        fault.  No makeup for it either.

** Letter Grade
   :PROPERTIES:
   :CUSTOM_ID: sec:letter-grade
   :END:

   Final grades assigned for this course will be based on the
   percentage of total points earned and are assigned as shown in
   Table [[tab:letter-grade]].  Note that your grade will be automatically
   /rounded up/.

   #+CAPTION: Letter Grade
   #+NAME: tab:letter-grade
   | Letter Grade | Percentage  |
   |--------------+-------------|
   | A            | 90% -- 100% |
   | B            | 80% -- 89%  |
   | C            | 70% -- 79%  |
   | D            | 60% -- 69%  |
   | F            | 00% -- 59%  |

* Syllabus
  :PROPERTIES:
  :CUSTOM_ID: sec:syllabus
  :END:

  #+BEGIN_SRC js :exports results :results output html
var path = require('path');
var fs = require('fs');
var base = '/home/gongzhitaao/node_modules/';

function req(m) {
  return require(path.join(base, m));
}

var async = req('async');
var jsdom = req('jsdom');
var moment = req('moment');
req('moment-recur');

var data = JSON.parse(fs.readFileSync('schedule.json', 'utf8'));
var recur = moment().recur(data.start, data.end);

var classday = recur
    .every(["mon", "wed", "fri"]).daysOfWeek()
    .except("2016-01-18")
    .except("2016-03-14")
    .except("2016-03-15")
    .except("2016-03-16")
    .except("2016-03-17")
    .except("2016-03-18")
    .all("YYYY-MM-DD ddd");

function pdflink(rel, l) {
  return rel + '/' + l + ".pdf";
}

function ziplink(rel, l) {
  return rel + '/' + l + ".zip";
}

function make_topic($, d, rowspan) {
  var $lnk = $('<a>', {href: pdflink(data.rel.slide, d.link), text: d.topic});
  var $ret = $('<td>').append($lnk);
  if (rowspan && rowspan > 1) $ret.attr({rowspan: rowspan});
  return $ret;
}

function make_assignment($, doc, d, rowspan) {
  var $ret = $('<td>');
  if (rowspan && rowspan > 1) $ret.attr({rowspan: rowspan});

  var $ul = $('<ul>');
  $ret.append($ul);

  d.sort(function(a, b) { return a.type < b.type; });
  for (var j = 0; j < d.length; ++j) {
    var itm = d[j];
    var $icon, $item;
    switch (itm.type) {
    case 'book':
      $icon = $('<i>', {class: 'fa fa-book'});
      $item = $(doc.createTextNode(itm.text));
      break;
    case 'faq':
      $icon = $('<i>', {class: 'fa fa-pencil-square-o'});
      $item = $('<a>', {href: pdflink(data.rel.assignment, itm.link), text: itm.text});
      break;
    case 'code':
      $icon = $('<i>', {class: 'fa fa-code'});
      $item = $('<a>', {href: pdflink(data.rel.assignment, itm.link), text: itm.text});
      break;
    case 'read':
      $icon = $('<i>', {class: 'fa fa-bookmark-o'});
      $item = $('<a>', {href: itm.link, text: itm.text});
      break;
    case 'hint':
      $icon = $('<i>', {class: 'fa fa-lightbulb-o'});
      $item = $('<a>', {href: ziplink(data.rel.assignment, itm.link), text: itm.text});
      break;
    case 'review':
      $icon = $('<i>', {class: 'fa fa-history'});
      $item = $('<a>', {href: pdflink(data.rel.review, itm.link), text: itm.text});
      break;
    default:
      /* empty */
    }
    $ul.append($('<li>').append($icon, $item));
  }

  return $ret;
}

function make_caption($, doc) {
  var $ret = $('<caption>');
  $ret.append(
    $('<ul>').append(
      $('<li>').append(
        $('<i>', {class: 'fa fa-book'}),
        $(doc.createTextNode('book chapters'))),
      $('<li>').append(
        $('<i>', {class: 'fa fa-pencil-square-o'}),
        $(doc.createTextNode('written assignment'))),
      $('<li>').append(
        $('<i>', {class: 'fa fa-code'}),
        $(doc.createTextNode('programming assignment'))),
      $('<li>').append(
        $('<i>', {class: 'fa fa-bookmark-o'}),
        $(doc.createTextNode('optional reading'))),
      $('<li>').append(
        $('<i>', {class: 'fa fa-lightbulb-o'}),
        $(doc.createTextNode('hint'))),
      $('<li>').append(
        $('<i>', {class: 'fa fa-history'}),
        $(doc.createTextNode('exam review')))));
  return $ret;
}

var window = jsdom.jsdom().defaultView;

jsdom.jQueryify(window, 'http://code.jquery.com/jquery-2.2.0.min.js', function (window) {
  var $ = window.jQuery;
  var doc = window.document;

  var $table = $('<table>', {'class': 'syllabus'});

  $table.append(make_caption($, doc));

  var $thead = $('<thead>');
  $table.append($thead);

  $thead.append($('<tr>').append(
    $('<th>', {html: "Date"}),
    $('<th>', {html: "Topic"}),
    $('<th>', {html: "Assignment"})));

  var dat = data.data;
  var rowspan = 1;
  var cls = dat[0]["class"]
  for (var i = 0, j = 0; i < classday.length; ++i) {
    var $tr = $('<tr>', {"class": cls});
    $table.append($tr);

    var $date = $('<td>', {html: classday[i]});
    $tr.append($date);

    if (rowspan > 1) {
      --rowspan;
      continue;
    }

    var d = dat[j];
    rowspan = 'span' in d ? d.span : 1;
    cls = d["class"];
    $tr.attr("class", cls);

    var $topic, $assignment;
    $topic = make_topic($, d, rowspan);
    $assignment = make_assignment($, doc, d.assignment, rowspan);
    $tr.append($topic, $assignment);

    ++j;
  }

  console.log($('<div>').append($table).html());
});
  #+END_SRC

* Credit
  :PROPERTIES:
  :CUSTOM_ID: sec:credit
  :END:

  Notes on operator notations are from https://en.wikipedia.org.
  Notes on Compiler optimization on associativity is adapted from
  \cite{kliger2015}\cite{dair2015}.

  Slides on formal languages (i.e., finite state automata, regular
  expression, context-free grammar) are based on
  1. book [[http://www.webber-labs.com/fl/][Formal Language: A Practical Introduction]] by Dr. Adam Brooks
     Webber.
  2. [[http://www.cs.rutgers.edu/~lou/314-f04-slides/][lecture notes]] by Dr. Louis Steinberg.
  3. [[http://infolab.stanford.edu/~ullman/ialc/slides/slides7.pdf][lecture notes]] by Dr. Jeffrey D. Ullman.
  4. [[http://www.cs.colostate.edu/~massey/Teaching/cs301/RestrictedAccess/Slides/301lecture03.pdf][Lecture notes]] by Dr. Dan Massey.
  5. [[http://www.cs.odu.edu/~toida/nerzic/390teched/regular/reg-lang/definitions.html][Lecture notes]] by Dr. Shunichi Toida
  6. [[https://www.coursera.org/course/automata][Lecture notes]] by Dr. Jeff Ullman.

  The =C++= version we use is =C++11= and above.  The tutorial is
  adapted from \cite{cplusplus}\cite{stroustrup2014}.  More authority FAQ's
  about =C++= can be found on Bjarne Stroustrup's (creator of =C++=)
  website http://www.stroustrup.com/.

  The =Scheme= version we use is R\(^{6}\)RS (The Revised\(^{6}\)
  Report on the Algorithmic Language =Scheme=) \cite{r6rs}, which
  could be found [[http://www.r6rs.org/]].  Tutorial on =Scheme= is
  adapted from \cite{r6rs}\cite{sitaram2015}.  Equality predicates
  comparison is adapted from \cite{shah2013}.  Notes about guile
  features are from \cite{guile}.

#+BIBLIOGRAPHY: ../comp3220.bib alpha option:-nobibsource limit:t option:-nokeywords

* Footnotes

[fn:1] Available online: http://www.webber-labs.com/mpl/.

[fn:2] Available online: http://www.webber-labs.com/fl/

#  LocalWords:  PPL SETUPFILE toc num pri STARTUP showall hideblocks
#  LocalWords:  stylesheet css href automata Zhitao zzg TigerMail wzw
#  LocalWords:  Wenlu Wednsday Sebesta Webber fn TBLFM vsum SRC js fs
#  LocalWords:  html req async jsdom utf classday mon fri daysOfWeek
#  LocalWords:  YYYY ddd pdflink pdf ziplink rowspan lnk ret td attr
#  LocalWords:  ul itm faq lightbulb li createTextNode jQueryify th
#  LocalWords:  jQuery thead dat cls kliger dair Bjarne
#  LocalWords:  cplusplus stroustrup Stroustrup's sitaram nobibsource
#  LocalWords:  nokeywords
